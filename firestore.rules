rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user has access to a project
    function hasProjectAccess(projectId) {
      let projectDoc = get(/databases/$(database)/documents/projects/$(projectId));
      return request.auth.uid == projectDoc.data.ownerId || 
             request.auth.uid in projectDoc.data.collaborators;
    }
    
    // Helper function to check if user owns a project
    function ownsProject(projectId) {
      let projectDoc = get(/databases/$(database)/documents/projects/$(projectId));
      return request.auth.uid == projectDoc.data.ownerId;
    }
    
    // Users can only read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Projects - users can manage their own projects and access shared projects
    match /projects/{projectId} {
      // Allow create - user becomes owner
      allow create: if request.auth != null 
        && request.resource.data.ownerId == request.auth.uid;
        
      // Allow read if user has access (owner or collaborator)
      allow read: if request.auth != null && hasProjectAccess(projectId);
      
      // Allow list/query for projects owned by or shared with the user
      allow list: if request.auth != null && (
        resource.data.ownerId == request.auth.uid ||
        request.auth.uid in resource.data.collaborators
      );
        
      // Allow update only by project owner
      allow update: if request.auth != null && ownsProject(projectId);
        
      // Allow delete only by project owner
      allow delete: if request.auth != null && ownsProject(projectId);
    }
    
    // Canvases - TEMPORARY simplified rules to fix permission issues
    // TODO: Restore complex project-based rules after debugging
    match /canvases/{canvasId} {
      // TEMPORARY: Allow authenticated users full access
      allow read, write, create, update, delete, list: if request.auth != null;
    }
    
    // Global canvas document - authenticated users can read and write (legacy support)
    match /globalCanvas/{document=**} {
      allow read, write: if request.auth != null;
    }
    
    // Canvas objects - TEMPORARY simplified rules to fix permission issues
    // TODO: Restore complex project-based rules after debugging
    match /canvasObjects/{objectId} {
      // TEMPORARY: Allow authenticated users full access
      allow read, write, create, update, delete, list: if request.auth != null;
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
